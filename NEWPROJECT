-- USING FOR TEST DO NOT EXCUTE IT
local validKeys = {
    "ABC-123", "KEY-987", "VIP-ACCESS", "FREE-001", "PRO-2025",
    "alpha", "bravo", "charlie", "delta", "echo",
    "key_one", "key_two", "key_three", "special_key",
    "user_key_01", "user_key_02", "HT5-4IB-KSP-TPP", "YWC-GPW-X1D-X9O", "OWK-UXE-68D-E45", "EMX-IDT-XEH-2DI", "8SP-LXM-3GP-B6R", "CG6-LFQ-JXU-BRV", "QZS-Z9T-BTW-FYH", "AGO-YWH-P2U-ERC", "A94-JNG-3OE-LNJ", "T7J-ZQ3-P12-L9A", "ZCJ-IPY-WIY-ZGK", "JJO-2D0-26N-D8R", "6YK-474-6Z9-IEA", "2LQ-5BU-G5I-S7C", "L9F-S5C-K3S-LIU", "Z3E-YHB-7KJ-9X6", "DX8-2WZ-EVE-6UL", "LD1-IFS-43V-PFS", "RW7-6ET-FV8-38A", "RE7-NAG-BBB-FYL", "SOF-K87-GNV-BF8", "6AP-2D8-EVW-T8Q", "1OU-59C-PIB-JSJ", "CZM-347-1FC-JQ7", "ZY9-3PL-TC2-W09", "UXQ-S0L-C3M-YHP", "YXB-NWC-0DB-AUH", "FIX-PF1-ZN2-4QT", "2IL-TRA-ZMQ-X1E", "3HM-K6Z-Q5B-7VT", "CBF-05H-W2M-AE3", "O9E-4XS-79Q-F0H", "K04-S4L-GVM-HW8", "QET-XZV-MVC-JXC", "0FW-0LU-0QB-G28", "72L-P3S-QWV-INN", "CD7-CQJ-BHU-JP1", "4I7-QBE-O6L-AHA", "028-HK9-2UI-6L3", "6N8-L8R-PKR-SZ5", "JG7-HPY-BO2-CXN", "5LV-M47-7OP-Y4T", "NNT-07N-QS4-OMT", "D7E-PBR-Q7J-V91", "9GI-D7D-N1G-EYA", "QQZ-ZBK-F8D-N2G", "BBT-KV0-FD2-O02", "ZST-X42-HB3-DET", "XHP-HY6-1K8-ICH", "PDG-489-DEE-GMM", "9ML-OOB-6LV-GZL", "84E-VHN-1SO-EXY", "SPM-85X-BDQ-XAG", "8RA-QI3-53M-M7O", "0GE-KU5-5S4-OB9", "JNS-E90-4DQ-F96", "THU-T5W-DIP-RFC", "5HJ-6FU-YYC-1JE", "MIZ-EKE-JO4-9B7", "UQP-89R-XQF-ZAK", "Q5D-K09-2P0-52V", "MRX-R1Z-052-FMJ", "117-7C8-I9V-EUL", "G7D-YLH-HBD-U44", "1UM-UCG-RAC-J55", "YP8-2N6-3TJ-N9T", "AX8-ZYU-S98-UEQ", "MQZ-G29-E5K-O5U", "THP-ZTW-9DN-OIU", "6V4-B5B-EOI-3IC", "C6F-UM9-L6D-PIO", "HEK-OJB-KL5-LDI", "ED6-4FH-VEQ-G67", "JSY-AY0-85M-7IB", "9RC-8W2-LJ2-P0S", "5PI-HJ6-6NV-H8A", "TD2-8EN-91K-CGS", "AZE-T59-EV5-WWO", "KV8-K7S-21X-0F2", "TSP-4IY-E99-SAB", "WIP-PR4-D13-VXQ", "DIB-YXR-5CK-J9L", "ZW8-O9I-56L-K8R", "0M5-OW8-M6E-3Z4", "LTM-QD1-OBR-13Z", "RX2-GO7-MRK-PSI", "MCQ-F8K-LN0-UGL", "R6V-DTV-IFY-P1P", "7FE-4T9-0MA-08A", "GMZ-2D1-JEA-A2X", "V15-1FW-9GH-YQG", "GTU-MY6-WBX-V1G", "546-OJI-QES-SSU", "GBC-0R1-82U-91Z", "4FX-60P-09F-LCF", "MAQ-FEP-CDI-3VR", "YAL-YSP-SQZ-NME", "REV-YCV-2QO-MEN", "5Y8-NI8-9KX-6YQ", "HWG-BPB-CY2-IYM", "AA3-RPE-9B1-SLH", "KC5-C4V-ZQ0-C8D", "UAT-Y6Q-7X0-CIU", "QVR-6YL-M6Q-9ZT", "9FL-L3C-I3H-RAU", "0IC-DWG-5A0-CAX", "RKT-1KM-AGD-9ZV", "5RY-UWE-MUW-XGX", "5S4-5EK-PCZ-TJS", "YYQ-4J6-KGK-7J4", "9W0-251-8B7-L2E"
}

-- Lấy key từ môi trường global (được yêu cầu do bạn muốn nhập key ngoài script)
local userKey = getgenv().Key or ""

local function isValidKey(k)
    if not k or k == "" then return false end
    for _,v in ipairs(validKeys) do
        if v == k then return true end
    end
    return false
end

if not isValidKey(userKey) then
    -- Thông báo nhẹ: key không hợp lệ -> dừng script
    pcall(function()
        local StarterGui = game:GetService("StarterGui")
        StarterGui:SetCore("SendNotification", {
            Title = "Key Check";
            Text = "Key không hợp lệ. Vui lòng thiết lập getgenv().Key trước khi chạy.";
            Duration = 6;
        })
    end)
    return
end

-- Nếu cần loadstring script chính (comment/placeholder):
-- loadstring(game:HttpGet("https://your-script-source-here.com/script.lua"))()

-- ===================== TẠO GIAO DIỆN =====================
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- Clear previous GUI with same name (an toàn khi dùng executor nhiều lần)
local existing = PlayerGui:FindFirstChild("TinyToggleMenu")
if existing then existing:Destroy() end

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "TinyToggleMenu"
screenGui.ResetOnSpawn = false
screenGui.Parent = PlayerGui

-- ---------- Small Square (avatar-like) ----------
local smallFrame = Instance.new("ImageButton")
smallFrame.Name = "SmallMenuButton"
smallFrame.Size = UDim2.fromOffset(56,56) -- vuông nhỏ
smallFrame.Position = UDim2.new(0, 20, 0.3, 0) -- mặc định bên trái
smallFrame.AnchorPoint = Vector2.new(0,0)
smallFrame.BackgroundTransparency = 1
smallFrame.Image = "rbxassetid://108648849330242" -- ID do bạn cung cấp
smallFrame.Parent = screenGui

-- bóng nhỏ
local smallUICorner = Instance.new("UICorner")
smallUICorner.CornerRadius = UDim.new(0.12)
smallUICorner.Parent = smallFrame

-- ---------- Big Menu (ẩn mặc định) ----------
local bigFrame = Instance.new("Frame")
bigFrame.Name = "BigMenu"
bigFrame.Size = UDim2.fromOffset(520, 360)
bigFrame.Position = UDim2.new(0.5, -260, 0.5, -180)
bigFrame.AnchorPoint = Vector2.new(0.5,0.5)
bigFrame.BackgroundColor3 = Color3.fromRGB(10,10,10) -- nền đen
bigFrame.BackgroundTransparency = 0
bigFrame.Visible = false
bigFrame.Parent = screenGui

local bigUICorner = Instance.new("UICorner")
bigUICorner.CornerRadius = UDim.new(0.03)
bigUICorner.Parent = bigFrame

-- Top bar (dùng để kéo)
local topBar = Instance.new("Frame")
topBar.Name = "TopBar"
topBar.Size = UDim2.new(1,0,0,34)
topBar.Position = UDim2.new(0,0,0,0)
topBar.BackgroundTransparency = 1
topBar.Parent = bigFrame

-- Close X button
local closeBtn = Instance.new("TextButton")
closeBtn.Name = "CloseBtn"
closeBtn.Size = UDim2.fromOffset(26,26)
closeBtn.Position = UDim2.new(1, -34, 0, 6)
closeBtn.AnchorPoint = Vector2.new(0,0)
closeBtn.Text = "✕"
closeBtn.Font = Enum.Font.SourceSansBold
closeBtn.TextSize = 20
closeBtn.BackgroundTransparency = 0
closeBtn.BackgroundColor3 = Color3.fromRGB(40,40,40)
closeBtn.TextColor3 = Color3.fromRGB(220,220,220)
closeBtn.Parent = topBar

local closeCorner = Instance.new("UICorner")
closeCorner.CornerRadius = UDim.new(0.25)
closeCorner.Parent = closeBtn

-- Title label
local titleLabel = Instance.new("TextLabel")
titleLabel.Name = "Title"
titleLabel.Size = UDim2.new(0.5,0,0,34)
titleLabel.Position = UDim2.new(0,8,0,0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "My Menu"
titleLabel.TextXAlignment = Enum.TextXAlignment.Left
titleLabel.TextColor3 = Color3.fromRGB(230,230,230)
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextSize = 18
titleLabel.Parent = topBar

-- Left tab list
local tabList = Instance.new("Frame")
tabList.Name = "TabList"
tabList.Size = UDim2.new(0,120,1, -46)
tabList.Position = UDim2.new(0,8,0,46)
tabList.BackgroundTransparency = 1
tabList.Parent = bigFrame

local function makeTabButton(name,y)
    local btn = Instance.new("TextButton")
    btn.Name = name.."Tab"
    btn.Size = UDim2.new(1, -8, 0, 40)
    btn.Position = UDim2.new(0,4,0,y)
    btn.BackgroundColor3 = Color3.fromRGB(30,30,30)
    btn.Text = name
    btn.Font = Enum.Font.Gotham
    btn.TextSize = 16
    btn.TextColor3 = Color3.fromRGB(220,220,220)
    btn.Parent = tabList
    local corner = Instance.new("UICorner") corner.Parent = btn
    return btn
end

local mainTabBtn = makeTabButton("Main", 0)
local farmTabBtn = makeTabButton("Farm", 48)
local infoTabBtn = makeTabButton("Info", 96)

-- Content area
local contentArea = Instance.new("Frame")
contentArea.Name = "ContentArea"
contentArea.Size = UDim2.new(1, -144, 1, -56)
contentArea.Position = UDim2.new(0,136,0,46)
contentArea.BackgroundTransparency = 1
contentArea.Parent = bigFrame

-- Helper to create panels
local function makePanel(name)
    local p = Instance.new("Frame")
    p.Name = name.."Panel"
    p.Size = UDim2.new(1,0,1,0)
    p.BackgroundTransparency = 1
    p.Visible = false
    p.Parent = contentArea
    return p
end

local mainPanel = makePanel("Main")
local farmPanel = makePanel("Farm")
local infoPanel = makePanel("Info")

-- Default: show Main
mainPanel.Visible = true

-- Fill Main panel with some example buttons/info
local welcome = Instance.new("TextLabel")
welcome.Size = UDim2.new(1, -20, 0, 60)
welcome.Position = UDim2.new(0,10,0,10)
welcome.BackgroundTransparency = 1
welcome.Text = "Welcome! Key verified." .. "\nUser Key: " .. tostring(userKey)
welcome.TextWrapped = true
welcome.TextYAlignment = Enum.TextYAlignment.Top
welcome.TextColor3 = Color3.fromRGB(230,230,230)
welcome.Font = Enum.Font.Gotham
welcome.TextSize = 14
welcome.Parent = mainPanel

local exampleBtn = Instance.new("TextButton")
exampleBtn.Size = UDim2.new(0,140,0,36)
exampleBtn.Position = UDim2.new(0,10,0,84)
exampleBtn.Text = "Do Something"
exampleBtn.Font = Enum.Font.Gotham
exampleBtn.TextSize = 14
exampleBtn.Parent = mainPanel
local exCorner = Instance.new("UICorner") exCorner.Parent = exampleBtn

exampleBtn.MouseButton1Click:Connect(function()
    pcall(function()
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Action";
            Text = "Bạn vừa nhấn nút Do Something";
            Duration = 4;
        })
    end)
end)

-- Farm panel example: a toggle and a speed slider (mock)
local farmLabel = Instance.new("TextLabel")
farmLabel.Size = UDim2.new(1, -20, 0, 30)
farmLabel.Position = UDim2.new(0,10,0,10)
farmLabel.BackgroundTransparency = 1
farmLabel.Text = "Farm Controls"
farmLabel.Font = Enum.Font.GothamBold
farmLabel.TextSize = 16
farmLabel.TextColor3 = Color3.fromRGB(230,230,230)
farmLabel.Parent = farmPanel

local farmToggle = Instance.new("TextButton")
farmToggle.Size = UDim2.new(0,120,0,32)
farmToggle.Position = UDim2.new(0,10,0,56)
farmToggle.Text = "Start Farm"
farmToggle.Font = Enum.Font.Gotham
farmToggle.TextSize = 14
farmToggle.Parent = farmPanel
local farmCorner = Instance.new("UICorner") farmCorner.Parent = farmToggle

local farming = false
farmToggle.MouseButton1Click:Connect(function()
    farming = not farming
    farmToggle.Text = farming and "Stop Farm" or "Start Farm"
    -- placeholder: thực tế bạn sẽ gắn hàm farm ở đây
    if farming then
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Farm";
            Text = "Farm started (placeholder).";
            Duration = 3;
        })
    else
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Farm";
            Text = "Farm stopped.";
            Duration = 3;
        })
    end
end)

-- Info panel: show some sample info
local infoText = Instance.new("TextLabel")
infoText.Size = UDim2.new(1, -20, 1, -20)
infoText.Position = UDim2.new(0,10,0,10)
infoText.BackgroundTransparency = 1
infoText.Text = "Script Info:\n- Author: You\n- Key: Verified\n- Tabs: Main, Farm, Info\n\nBạn có thể mở rộng các chức năng trong từng tab." 
infoText.TextWrapped = true
infoText.TextXAlignment = Enum.TextXAlignment.Left
infoText.TextYAlignment = Enum.TextYAlignment.Top
infoText.TextColor3 = Color3.fromRGB(220,220,220)
infoText.Font = Enum.Font.Gotham
infoText.TextSize = 14
infoText.Parent = infoPanel

-- Tab switching
local function showPanel(panel)
    mainPanel.Visible = false
    farmPanel.Visible = false
    infoPanel.Visible = false
    panel.Visible = true
end

mainTabBtn.MouseButton1Click:Connect(function() showPanel(mainPanel) end)
farmTabBtn.MouseButton1Click:Connect(function() showPanel(farmPanel) end)
infoTabBtn.MouseButton1Click:Connect(function() showPanel(infoPanel) end)

-- Close button behavior
closeBtn.MouseButton1Click:Connect(function()
    bigFrame.Visible = false
end)

-- ---------- Dragging functionality for bigFrame and smallFrame ----------
local UserInputService = game:GetService("UserInputService")

local function makeDraggable(frame, dragHandle)
    dragHandle = dragHandle or frame
    local dragging = false
    local dragInput, dragStart, startPos

    local function update(input)
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end

    dragHandle.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    dragHandle.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)
end

makeDraggable(bigFrame, topBar)
makeDraggable(smallFrame)

-- ---------- Toggle behavior: click small square to open/close big menu ----------
smallFrame.MouseButton1Click:Connect(function()
    bigFrame.Visible = not bigFrame.Visible
end)

-- Additionally: if big menu open and user clicks outside big menu, don't auto-close (optional)
-- But if you want the small button to ALWAYS close big menu on click (even if open), handled above.

-- Finished
print("TinyToggleMenu loaded. Key verified: " .. tostring(userKey))
