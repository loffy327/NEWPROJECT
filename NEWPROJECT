-- USING FOR TEST DO NOT EXCUTE IT
local validKeys = {
    "ABC-123", "KEY-987", "VIP-ACCESS", "FREE-001", "PRO-2025",
    "alpha", "bravo", "charlie", "delta", "echo",
    "key_one", "key_two", "key_three", "special_key",
    "user_key_01", "user_key_02"
}

-- Lấy key từ môi trường global (được yêu cầu do bạn muốn nhập key ngoài script)
local userKey = getgenv().Key or ""

local function isValidKey(k)
    if not k or k == "" then return false end
    for _,v in ipairs(validKeys) do
        if v == k then return true end
    end
    return false
end

if not isValidKey(userKey) then
    -- Thông báo nhẹ: key không hợp lệ -> dừng script
    pcall(function()
        local StarterGui = game:GetService("StarterGui")
        StarterGui:SetCore("SendNotification", {
            Title = "Key Check";
            Text = "Key không hợp lệ. Vui lòng thiết lập getgenv().Key trước khi chạy.";
            Duration = 6;
        })
    end)
    return
end

-- Nếu cần loadstring script chính (comment/placeholder):
-- loadstring(game:HttpGet("https://your-script-source-here.com/script.lua"))()

-- ===================== TẠO GIAO DIỆN =====================
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- Clear previous GUI with same name (an toàn khi dùng executor nhiều lần)
local existing = PlayerGui:FindFirstChild("TinyToggleMenu")
if existing then existing:Destroy() end

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "TinyToggleMenu"
screenGui.ResetOnSpawn = false
screenGui.Parent = PlayerGui

-- ---------- Small Square (avatar-like) ----------
local smallFrame = Instance.new("ImageButton")
smallFrame.Name = "SmallMenuButton"
smallFrame.Size = UDim2.fromOffset(56,56) -- vuông nhỏ
smallFrame.Position = UDim2.new(0, 20, 0.3, 0) -- mặc định bên trái
smallFrame.AnchorPoint = Vector2.new(0,0)
smallFrame.BackgroundTransparency = 1
smallFrame.Image = "rbxassetid://108648849330242" -- ID do bạn cung cấp
smallFrame.Parent = screenGui

-- bóng nhỏ
local smallUICorner = Instance.new("UICorner")
smallUICorner.CornerRadius = UDim.new(0.12)
smallUICorner.Parent = smallFrame

-- ---------- Big Menu (ẩn mặc định) ----------
local bigFrame = Instance.new("Frame")
bigFrame.Name = "BigMenu"
bigFrame.Size = UDim2.fromOffset(520, 360)
bigFrame.Position = UDim2.new(0.5, -260, 0.5, -180)
bigFrame.AnchorPoint = Vector2.new(0.5,0.5)
bigFrame.BackgroundColor3 = Color3.fromRGB(10,10,10) -- nền đen
bigFrame.BackgroundTransparency = 0
bigFrame.Visible = false
bigFrame.Parent = screenGui

local bigUICorner = Instance.new("UICorner")
bigUICorner.CornerRadius = UDim.new(0.03)
bigUICorner.Parent = bigFrame

-- Top bar (dùng để kéo)
local topBar = Instance.new("Frame")
topBar.Name = "TopBar"
topBar.Size = UDim2.new(1,0,0,34)
topBar.Position = UDim2.new(0,0,0,0)
topBar.BackgroundTransparency = 1
topBar.Parent = bigFrame

-- Close X button
local closeBtn = Instance.new("TextButton")
closeBtn.Name = "CloseBtn"
closeBtn.Size = UDim2.fromOffset(26,26)
closeBtn.Position = UDim2.new(1, -34, 0, 6)
closeBtn.AnchorPoint = Vector2.new(0,0)
closeBtn.Text = "✕"
closeBtn.Font = Enum.Font.SourceSansBold
closeBtn.TextSize = 20
closeBtn.BackgroundTransparency = 0
closeBtn.BackgroundColor3 = Color3.fromRGB(40,40,40)
closeBtn.TextColor3 = Color3.fromRGB(220,220,220)
closeBtn.Parent = topBar

local closeCorner = Instance.new("UICorner")
closeCorner.CornerRadius = UDim.new(0.25)
closeCorner.Parent = closeBtn

-- Title label
local titleLabel = Instance.new("TextLabel")
titleLabel.Name = "Title"
titleLabel.Size = UDim2.new(0.5,0,0,34)
titleLabel.Position = UDim2.new(0,8,0,0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "My Menu"
titleLabel.TextXAlignment = Enum.TextXAlignment.Left
titleLabel.TextColor3 = Color3.fromRGB(230,230,230)
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextSize = 18
titleLabel.Parent = topBar

-- Left tab list
local tabList = Instance.new("Frame")
tabList.Name = "TabList"
tabList.Size = UDim2.new(0,120,1, -46)
tabList.Position = UDim2.new(0,8,0,46)
tabList.BackgroundTransparency = 1
tabList.Parent = bigFrame

local function makeTabButton(name,y)
    local btn = Instance.new("TextButton")
    btn.Name = name.."Tab"
    btn.Size = UDim2.new(1, -8, 0, 40)
    btn.Position = UDim2.new(0,4,0,y)
    btn.BackgroundColor3 = Color3.fromRGB(30,30,30)
    btn.Text = name
    btn.Font = Enum.Font.Gotham
    btn.TextSize = 16
    btn.TextColor3 = Color3.fromRGB(220,220,220)
    btn.Parent = tabList
    local corner = Instance.new("UICorner") corner.Parent = btn
    return btn
end

local mainTabBtn = makeTabButton("Main", 0)
local farmTabBtn = makeTabButton("Farm", 48)
local infoTabBtn = makeTabButton("Info", 96)

-- Content area
local contentArea = Instance.new("Frame")
contentArea.Name = "ContentArea"
contentArea.Size = UDim2.new(1, -144, 1, -56)
contentArea.Position = UDim2.new(0,136,0,46)
contentArea.BackgroundTransparency = 1
contentArea.Parent = bigFrame

-- Helper to create panels
local function makePanel(name)
    local p = Instance.new("Frame")
    p.Name = name.."Panel"
    p.Size = UDim2.new(1,0,1,0)
    p.BackgroundTransparency = 1
    p.Visible = false
    p.Parent = contentArea
    return p
end

local mainPanel = makePanel("Main")
local farmPanel = makePanel("Farm")
local infoPanel = makePanel("Info")

-- Default: show Main
mainPanel.Visible = true

-- Fill Main panel with some example buttons/info
local welcome = Instance.new("TextLabel")
welcome.Size = UDim2.new(1, -20, 0, 60)
welcome.Position = UDim2.new(0,10,0,10)
welcome.BackgroundTransparency = 1
welcome.Text = "Welcome! Key verified." .. "\nUser Key: " .. tostring(userKey)
welcome.TextWrapped = true
welcome.TextYAlignment = Enum.TextYAlignment.Top
welcome.TextColor3 = Color3.fromRGB(230,230,230)
welcome.Font = Enum.Font.Gotham
welcome.TextSize = 14
welcome.Parent = mainPanel

local exampleBtn = Instance.new("TextButton")
exampleBtn.Size = UDim2.new(0,140,0,36)
exampleBtn.Position = UDim2.new(0,10,0,84)
exampleBtn.Text = "Do Something"
exampleBtn.Font = Enum.Font.Gotham
exampleBtn.TextSize = 14
exampleBtn.Parent = mainPanel
local exCorner = Instance.new("UICorner") exCorner.Parent = exampleBtn

exampleBtn.MouseButton1Click:Connect(function()
    pcall(function()
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Action";
            Text = "Bạn vừa nhấn nút Do Something";
            Duration = 4;
        })
    end)
end)

-- Farm panel example: a toggle and a speed slider (mock)
local farmLabel = Instance.new("TextLabel")
farmLabel.Size = UDim2.new(1, -20, 0, 30)
farmLabel.Position = UDim2.new(0,10,0,10)
farmLabel.BackgroundTransparency = 1
farmLabel.Text = "Farm Controls"
farmLabel.Font = Enum.Font.GothamBold
farmLabel.TextSize = 16
farmLabel.TextColor3 = Color3.fromRGB(230,230,230)
farmLabel.Parent = farmPanel

local farmToggle = Instance.new("TextButton")
farmToggle.Size = UDim2.new(0,120,0,32)
farmToggle.Position = UDim2.new(0,10,0,56)
farmToggle.Text = "Start Farm"
farmToggle.Font = Enum.Font.Gotham
farmToggle.TextSize = 14
farmToggle.Parent = farmPanel
local farmCorner = Instance.new("UICorner") farmCorner.Parent = farmToggle

local farming = false
farmToggle.MouseButton1Click:Connect(function()
    farming = not farming
    farmToggle.Text = farming and "Stop Farm" or "Start Farm"
    -- placeholder: thực tế bạn sẽ gắn hàm farm ở đây
    if farming then
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Farm";
            Text = "Farm started (placeholder).";
            Duration = 3;
        })
    else
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Farm";
            Text = "Farm stopped.";
            Duration = 3;
        })
    end
end)

-- Info panel: show some sample info
local infoText = Instance.new("TextLabel")
infoText.Size = UDim2.new(1, -20, 1, -20)
infoText.Position = UDim2.new(0,10,0,10)
infoText.BackgroundTransparency = 1
infoText.Text = "Script Info:\n- Author: You\n- Key: Verified\n- Tabs: Main, Farm, Info\n\nBạn có thể mở rộng các chức năng trong từng tab." 
infoText.TextWrapped = true
infoText.TextXAlignment = Enum.TextXAlignment.Left
infoText.TextYAlignment = Enum.TextYAlignment.Top
infoText.TextColor3 = Color3.fromRGB(220,220,220)
infoText.Font = Enum.Font.Gotham
infoText.TextSize = 14
infoText.Parent = infoPanel

-- Tab switching
local function showPanel(panel)
    mainPanel.Visible = false
    farmPanel.Visible = false
    infoPanel.Visible = false
    panel.Visible = true
end

mainTabBtn.MouseButton1Click:Connect(function() showPanel(mainPanel) end)
farmTabBtn.MouseButton1Click:Connect(function() showPanel(farmPanel) end)
infoTabBtn.MouseButton1Click:Connect(function() showPanel(infoPanel) end)

-- Close button behavior
closeBtn.MouseButton1Click:Connect(function()
    bigFrame.Visible = false
end)

-- ---------- Dragging functionality for bigFrame and smallFrame ----------
local UserInputService = game:GetService("UserInputService")

local function makeDraggable(frame, dragHandle)
    dragHandle = dragHandle or frame
    local dragging = false
    local dragInput, dragStart, startPos

    local function update(input)
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end

    dragHandle.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    dragHandle.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)
end

makeDraggable(bigFrame, topBar)
makeDraggable(smallFrame)

-- ---------- Toggle behavior: click small square to open/close big menu ----------
smallFrame.MouseButton1Click:Connect(function()
    bigFrame.Visible = not bigFrame.Visible
end)

-- Additionally: if big menu open and user clicks outside big menu, don't auto-close (optional)
-- But if you want the small button to ALWAYS close big menu on click (even if open), handled above.

-- Finished
print("TinyToggleMenu loaded. Key verified: " .. tostring(userKey))
